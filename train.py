# -*- coding: utf-8 -*-
"""train

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EsIW0peBqj0aPfNhivOEYhS1Ndaptk7Z
"""

import keras
from keras.models import load_model
from keras.callbacks import EarlyStopping, ModelCheckpoint
from keras.applications.vgg16 import preprocess_input
from keras.preprocessing.image import ImageDataGenerator
from keras.optimizers import Adam
from keras.metrics import AUC

model = load_model('/content/drive/My Drive/pictures2/new_model.h5')

#creating data generators for train and validation data
data_generator = ImageDataGenerator(preprocessing_function=preprocess_input)

train_gen = data_generator.flow_from_directory('/content/drive/My Drive/pictures2/train',
                                                     target_size = (224, 224), batch_size = 32, class_mode ='categorical')

validation_gen = data_generator.flow_from_directory('/content/drive/My Drive/pictures2/valid',
                                                          target_size = (224, 224), batch_size = 32, class_mode ='categorical')

#model compilation and creating callbacks

opt = keras.optimizers.Adam(learning_rate=0.001)
model.compile(optimizer = opt, loss = 'categorical_crossentropy', 
              metrics = ['accuracy', 'AUC',])
early = EarlyStopping(monitor = 'val_loss', mode = 'min', verbose=1, patience = 3)
check = ModelCheckpoint('/content/drive/My Drive/pictures2/final_model.h5', monitor = 'val_loss', 
                        mode = 'min', verbose = 1, save_best_only = True)
cb = [early, check]

#model training
model.fit(train_gen, epochs = 20, validation_data = validation_gen, callbacks = cb, verbose = 1)